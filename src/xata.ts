// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "UserQuotes",
    columns: [
      { name: "user_id", type: "string" },
      { name: "quote_title", type: "string" },
      { name: "quote_content", type: "string" },
    ],
  },
  {
    name: "FavouriteQuotes",
    columns: [
      { name: "user_id", type: "string" },
      { name: "quote", type: "string" },
      { name: "author", type: "string" },
      { name: "category", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type UserQuotes = InferredTypes["UserQuotes"];
export type UserQuotesRecord = UserQuotes & XataRecord;

export type FavouriteQuotes = InferredTypes["FavouriteQuotes"];
export type FavouriteQuotesRecord = FavouriteQuotes & XataRecord;

export type DatabaseSchema = {
  UserQuotes: UserQuotesRecord;
  FavouriteQuotes: FavouriteQuotesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Ralph-Codes-s-workspace-uglabh.us-east-1.xata.sh/db/Quote-Crafters",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
